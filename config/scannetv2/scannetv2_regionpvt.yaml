DATA:
  data_name: scannetv2
  data_root: data_utils/scannetv2 # Fill in the pre-processed data path (which contains the 'train', 'val', 'test' directories)
  classes: 20
  fea_dim: 6
  voxel_size: 0.02 
  voxel_max: 120000 
  loop: 6 

TRAIN:
  # arch
  arch: regional_to_local_point_voxel_transformer
  stem_transformer: False
  use_xyz: True
  sync_bn: True  # adopt sync_bn or not
  rel_query: True
  rel_key: True
  rel_value: True
  quant_size: 0.005
  num_layers: 5 
  patch_size: 1 
  window_size: 5 
  depths: [3,3,9,3,3] 
  channels: [48, 96, 192, 384, 384] 
  num_heads: [3, 6, 12, 24, 24]
  up_k: 3
  drop_path_rate: 0.3
  concat_xyz: True
  grid_size: 0.02
  max_batch_points: 250000
  max_num_neighbors: 34 # For KPConv
  ratio: 0.25
  k: 16

  # training
  aug: True
  transformer_lr_scale: 0.1 
  scheduler_update: step 
  scheduler: MultiStepWithWarmup 
  warmup: linear
  warmup_iters: 3000
  warmup_ratio: 0.000001
  use_amp: True
  optimizer: AdamW #SGD
  train_gpu: [0, 1, 2, 3] 
  workers: 16  # data loader workers
  batch_size: 8  # batch size for training
  batch_size_val: 4 # batch size for validation during training, memory and speed tradeoff
  base_lr: 0.006
  epochs: 100
  start_epoch: 0
  step_epoch: 30
  multiplier: 0.1
  momentum: 0.9
  weight_decay: 0.05
  drop_rate: 0.5

  ignore_label: -100 #255
  manual_seed: 123
  print_freq: 1
  save_freq: 1
  save_path: runs/scannetv2_regionpvt
  weight:  # path to initial weight (default: none)
  resume:  # path to latest checkpoint (default: none)
  evaluate: True  # evaluate on validation set, extra gpu memory needed and small batch_size_val is recommend
  eval_freq: 1
Distributed:
  dist_url: tcp://127.0.0.1:6789
  dist_backend: 'nccl'
  multiprocessing_distributed: True
  world_size: 1
  rank: 0

TEST:
  data_root_val:  # Fill the path that contains the scenes of the validation set (e.g., "[YOUR PATH]/val")
  test_list: 
  test_list_full: 
  split: val  # split in [train, val and test]
  test_gpu: [0]
  test_workers: 4
  batch_size_test: 4
  model_path: # Fill the path of the trained .pth file model
  save_folder: # Fill the path to store the .npy files for each scene
  names_path: data/scannet/scannet_names.txt
